1. 용어 정리
  1) 객체 지향적 프로그래밍( OOP ) 
		OOP = Object + Object + Object ...
		
  2) 객체	클래스 실제 존재하는 것 (유형, 무형)
  
 		얘 아님-> Tv tv1 <- 얘가 클래스임
 		클래스 타입으로 선언된 참조변수를 객체라 한다
 
  
  		 
  3) 클래스      객체의 설계도
  4) 인스턴스      
  5) 인스턴스화
  6) 객체의 구성요소 	멤버변수(필드), 메서드
  7) 멤버	 
  8) 멤버변수	
  9) 멤버함수 
  10) 필드	관리하고자 하는 객체의 구성요소이다 멤버변수와 같은 뜻
  11) 메서드 	어떠한 기능을 사용하기 편리하도록 미리 만들어놓은 코딩
  12) 변수      
  		메모리 상의 값을 저장하는 기억공간
  		값을 여러번 할당할 수 있는 기억공간
  		
  13) 참조변수	주소값을 저장하는 변수	
  
  직접 저장공간에 리터럴이 들어있는 것이 아닌 다른 저장공간의 리터럴을 참조해서 보여주는 변수
  
2. 클래스의 특징( OOP의 특징 )에 대해서 설명하세요.
	캡슐화..
   
3. 클래스의 설계 과정에 대해서 설명하세요.  

	클래스식별자를 정하고 멤버변수를 설정한 다음 필요한 메서드를 만든다.(메서드생략가능)
   
4. 클래스의 [멤버(필드, 메서드, 생성자 )]를 접근하는 방법에 대해서 설명하세요.

	클래스 선언 - > 클래스식별자.메서드();
    
5. NullPointerException 예외(에러)는 언제 발생하는 가 ?

	클래스의 멤버변수가 null값일때 new연산자를 이용해 선언하지 않으면 나오는 오류이다
  
6. 클래스의 선언 형식

	클래스이름 클래스식별자 = new 클래스이름();
  
7. 클래스 앞의 접근지정자의 종류에 대해서 설명하세요.

8. 멤버 앞의 접근지정자의 종류에 대해서 설명하세요.
	public -> 패키지 내외의 모든 곳에서 접근 가능함
	package -> 패키지 내에서만 가능
	private -> 
	protected ->
   
9. 클래스 선언할 때 기타제어자 종류에 대해서 설명하세요.

   
10. 클래스(객체) 복사(copy)와 복제(clone)에 대해서 설명하세요.
클래스 복사는 다른 저장공간을 가지고있지만 같은 주소값을 참조하는데에 반해 
복제는 주소값또한 새로 생성되어 다른 주소값을 참조한다.


11. 클래스 배열( 객체 배열 ) 에 대해서 설명하세요.

12. 선언되는 위치를 기준으로 변수 구분하고, 생성시기, 소멸시기에 대해서 설명하세요. 
    
13. 30명 학생의 성적 처리
   ( Student 클래스 선언 후 사용 ) 
   

public class Student {
	String name;
	int kor, eng, mat;
	int tot;
	double avg;
	int rank;
}
=====================================================

public static void main(String[] args) {
		Student stu = new Student();

}//m


 